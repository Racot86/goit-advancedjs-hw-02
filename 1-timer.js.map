{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from 'izitoast';\nimport \"izitoast/dist/css/iziToast.min.css\"\n\nlet selectedDate = new Date();\n\nconst timeElements = document.querySelectorAll('.value');\nlet btn = document.querySelector('button');\nbtn.disabled = true;\n\nconst dp = document.querySelector('#datetime-picker');\nconst fp = flatpickr(dp,\n  {\n    enableTime: true,\n    dateFormat: \"d-m-Y H:i\",\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      if (selectedDates[0] > new Date()) {\n        selectedDate = selectedDates[0];\n        btn.disabled = false;\n        btn.classList.remove('disabled');\n      }else {\n        iziToast.error({\n          title: 'Error',\n          message: 'Please choose a date in the future',\n        });\n      }\n\n    },\n    onOpen(){\n      fp.setDate(new Date());\n    }\n  });\n\nconst  convertMs = (ms) =>{\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst convertDateObjToEl = (obj) =>{\n  timeElements[0].innerHTML = obj.days.toString().padStart(2, '0');\n  timeElements[1].innerHTML = obj.hours.toString().padStart(2, '0');\n  timeElements[2].innerHTML = obj.minutes.toString().padStart(2, '0');\n  timeElements[3].innerHTML = obj.seconds.toString().padStart(2, '0');\n}\n\n\nbtn.addEventListener('click', (e) => {\n  btn.disabled = true;\n  btn.classList.add('disabled');\n  dp.disabled = true;\n\n  const count = setInterval(() => {\n    let timeDiff = selectedDate - new Date();\n\n    if (timeDiff < 0) {\n      clearInterval(count);\n      dp.disabled = false;\n    }else{\n      convertDateObjToEl(convertMs(timeDiff));\n    }\n\n  }, 1000);\n\n})\n"],"names":["selectedDate","timeElements","btn","dp","fp","flatpickr","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","convertDateObjToEl","obj","count","timeDiff"],"mappings":"2FAMA,IAAIA,EAAe,IAAI,KAEvB,MAAMC,EAAe,SAAS,iBAAiB,QAAQ,EACvD,IAAIC,EAAM,SAAS,cAAc,QAAQ,EACzCA,EAAI,SAAW,GAEf,MAAMC,EAAK,SAAS,cAAc,kBAAkB,EAC9CC,EAAKC,EAAUF,EACnB,CACE,WAAY,GACZ,WAAY,YACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQG,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzBN,EAAeM,EAAc,CAAC,EAC9BJ,EAAI,SAAW,GACfA,EAAI,UAAU,OAAO,UAAU,GAE/BK,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACnB,CAAS,CAGJ,EACD,QAAQ,CACNH,EAAG,QAAQ,IAAI,IAAM,CACtB,CACL,CAAG,EAEII,EAAaC,GAAM,CAQxB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEMC,EAAsBC,GAAO,CACjCd,EAAa,CAAC,EAAE,UAAYc,EAAI,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC/Dd,EAAa,CAAC,EAAE,UAAYc,EAAI,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEd,EAAa,CAAC,EAAE,UAAYc,EAAI,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAClEd,EAAa,CAAC,EAAE,UAAYc,EAAI,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACpE,EAGAb,EAAI,iBAAiB,QAAU,GAAM,CACnCA,EAAI,SAAW,GACfA,EAAI,UAAU,IAAI,UAAU,EAC5BC,EAAG,SAAW,GAEd,MAAMa,EAAQ,YAAY,IAAM,CAC9B,IAAIC,EAAWjB,EAAe,IAAI,KAE9BiB,EAAW,GACb,cAAcD,CAAK,EACnBb,EAAG,SAAW,IAEdW,EAAmBN,EAAUS,CAAQ,CAAC,CAGzC,EAAE,GAAI,CAET,CAAC"}